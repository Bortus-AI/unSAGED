name: Docker Build and Push

on:
  push:
    branches:
      - dev # or any other branch you wish to have the automation run on
  pull_request:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Create .env.local file with dummy values
        run: |
          echo "NEXT_PUBLIC_DEFAULT_MODEL='dummy-model'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_TITLE='Dummy Title'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DESCRIPTION='Dummy Description'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OPENAI_SYSTEM_PROMPT='Dummy Prompt'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_SYSTEM_PROMPT='Dummy Ollama Prompt'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TEMPERATURE='0.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TOP_P='0.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TOP_K='0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_REPEAT_PENALTY='0.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_SEED='0'" >> ./apps/unsaged/.env.local
          echo "NEXTAUTH_SECRET='dummy_nextauth_secret'" >> ./apps/unsaged/.env.local
          echo "NEXTAUTH_URL='https://dummyurl.test'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEBUG_MODE='false'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY='dummy_supabase_anon_key'" >> ./apps/unsaged/.env.local
          echo "AUTH0_CLIENT_ID='dummy_auth0_client_id'" >> ./apps/unsaged/.env.local
          echo "AUTH0_CLIENT_SECRET='dummy_auth0_client_secret'" >> ./apps/unsaged/.env.local
          echo "AUTH0_ISSUER='https://dummyissuer.auth0.com'" >> ./apps/unsaged/.env.local
          echo "GOOGLE_CLIENT_ID='dummy_google_client_id'" >> ./apps/unsaged/.env.local
          echo "GOOGLE_CLIENT_SECRET='dummy_google_client_secret'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_SUPABASE_URL='https://dummy.supabase.co'" >> ./apps/unsaged/.env.local
          echo "SUPABASE_JWT_SECRET='dummy_supabase_jwt_secret'" >> ./apps/unsaged/.env.local
          echo "SUPABASE_SERVICE_ROLE_KEY='dummy_supabase_service_role_key'" >> ./apps/unsaged/.env.local

      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub (or your preferred registry)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Fetch the current latest image
      - name: Pull the latest Docker image
        run: docker pull bpvarsity/unsaged:latest || true # Will not fail if the image does not exist
      
      # Retag the current latest image with the GitHub Actions build number if it exists
      - name: Retag the latest Docker image with build number
        run: |
          if [[ "$(docker images -q bpvarsity/unsaged:latest 2> /dev/null)" != "" ]]; then
            docker tag bpvarsity/unsaged:latest bpvarsity/unsaged:${{ github.run_number }}
            echo "Image retagged with build number: ${{ github.run_number }}"
          else
            echo "No latest image to retag. Skipping this step."
          fi
      
      # Push the retagged image if it exists
      - name: Push the retagged Docker image
        if: env.RETAGGED_IMAGE
        run: docker push bpvarsity/unsaged:${{ github.run_number }}
        env:
          RETAGGED_IMAGE: ${{ steps.retag.outputs.retagged }}

      # Build and push the new latest image
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./apps/unsaged/Dockerfile
          push: true
          tags: bpvarsity/unsaged:latest
      
      # This section remains the same for version-tagged builds
      - name: Build and push Docker image with version
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: bpvarsity/unsaged:${{ github.ref_name }}
