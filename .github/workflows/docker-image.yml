name: Docker Build and Push

on:
  push:
    branches:
      - dev # or any other branch you wish to have the automation run on
  pull_request:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Create .env.local file
        run: |
          echo "NEXT_PUBLIC_DEFAULT_MODEL='gpt-4'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_TITLE='Bortus-AI'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DESCRIPTION='Open source chat kit engineered for seamless interaction with AI models'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OPENAI_SYSTEM_PROMPT='You are ChatGPT, a large language model trained by OpenAI. Follow the user's instructi carefully. Respond using markdown.'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_SYSTEM_PROMPT='You are a helpful AI assistant. Follow the my instructions carefully. Your responses will be automatically parsed as markdown. Do not surround your response with any language tags.'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TEMPERATURE='1.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TOP_P='1.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_TOP_K='40'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_REPEAT_PENALTY='1.0'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEFAULT_OLLAMA_SEED='7'" >> ./apps/unsaged/.env.local
          echo "NEXTAUTH_SECRET='${{ secrets.NEXTAUTH_SECRET }}'" >> ./apps/unsaged/.env.local
          echo "NEXTAUTH_URL='https://chat.bortus.ai'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_DEBUG_MODE='true'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY='${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}'" >> ./apps/unsaged/.env.local
          echo "AUTH0_CLIENT_ID='${{ secrets.AUTH0_CLIENT_ID }}'" >> ./apps/unsaged/.env.local
          echo "AUTH0_CLIENT_SECRET='${{ secrets.AUTH0_CLIENT_SECRET }}'" >> ./apps/unsaged/.env.local
          echo "AUTH0_ISSUER='https://dev-atz0i8gtht86so7o.us.auth0.com'" >> ./apps/unsaged/.env.local
          echo "GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}'" >> ./apps/unsaged/.env.local
          echo "GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}'" >> ./apps/unsaged/.env.local
          echo "NEXT_PUBLIC_SUPABASE_URL='https://khoximvqphadhuohusah.supabase.co'" >> ./apps/unsaged/.env.local
          echo "SUPABASE_JWT_SECRET='${{ secrets.SUPABASE_JWT_SECRET }}'" >> ./apps/unsaged/.env.local
          echo "SUPABASE_SERVICE_ROLE_KEY='${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}'" >> ./apps/unsaged/.env.local
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PALM_API_KEY: ${{ secrets.PALM_API_KEY }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      
      - name: Install dependencies for unsaged app
        run: |
          cd apps/unsaged
          pnpm install
          cd ../../
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub (or your preferred registry)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # This step will only run for non-tag commits and will not push a 'latest' tag
      - name: Build and push Docker image (non-tag commits)
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./apps/unsaged/Dockerfile
          push: true
          tags: bpvarsity/unsaged:${{ github.sha }}

      # This step will run only for tag commits and will push a tag based on the git tag
      - name: Build and push Docker image with version tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: bpvarsity/unsaged:${{ github.ref_name }}

          push: true
          tags: bpvarsity/unsaged:${{ github.ref_name }}
